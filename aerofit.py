# -*- coding: utf-8 -*-
"""Aerofit Case Study.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sWWwes5bYSYysAKBi9r8k2OU0VGsv2UL

# About this dataset
**About Aerofit**: Aerofit is a leading brand in the field of fitness equipment. Aerofit provides a product range including machines such as treadmills, exercise bikes, gym equipment, and fitness accessories to cater to the needs of all categories of people.

## Buisness Problem

The market research team at AeroFit wants to identify the characteristics of the target audience for each type of treadmill offered by the company, to provide a better recommendation of the treadmills to the new customers. The team decides to investigate whether there are differences across the product with respect to customer characteristics.

## Product Portfolio:

- The KP281 is an entry-level treadmill that sells for \$1,500.
- The KP481 is for mid-level runners that sell for \$1,750.
- The KP781 treadmill is having advanced features that sell for $2,500
Metric

We will use count of users, probabilities, conditional probabilities to evaluate the users and create a customer profile for each product

Dataset link [here](https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/001/125/original/aerofit_treadmill.csv?1639992749)

Preliminary info about the features of the Dataset:

- Product Purchased: KP281, KP481, or KP781
- Age: In years
- Gender: Male/Female
- Education: In years
- MaritalStatus: Single or partnered
- Usage: The average number of times the customer plans to use the treadmill each week.
- Income: Annual income (in $)
- Fitness: Self-rated fitness on a 1-to-5 scale, where 1 is the poor shape and 5 is the excellent
- Miles: The average number of miles the customer expects to walk/run each week
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

!wget https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/001/125/original/aerofit_treadmill.csv?1639992749

data = pd.read_csv('aerofit_treadmill.csv?1639992749')

"""## Data Exploration

"""

data.head()

"""We will try to find some relationship between different features to get some insights regarding the data."""

data.shape

data.info()

"""Product, Gender, Marital Status are in string format and all other data are in the integer format

"""

data.isnull().sum()

"""No null values in the dataset"""

data.sort_values(by='Income', ascending=True)

data.describe(include='all')

"""### Some observations

- Average usage of Treadmill each week is 3.45 times.
- Average income of customers are $53,720(approx)/-
- Average distance customer walks/runs on treadmill is 103 Miles.
- More than 50% Customers have Fitness score 3.
"""

plt.figure(figsize=(10,10))
plt.suptitle('Boxplots for Outliers Check', fontsize = 24)


plt.subplot(2,2,1)
sns.boxplot(data, x="Product", y="Usage")
plt.xlabel('Treadmill Models')
plt.ylabel('Usage (Avg # / Week)')
plt.title('Usage VS Product', fontsize = 16)

plt.subplot(2,2,2)
sns.boxplot(data, x="Product", y="Age")
plt.xlabel('Treadmill Models')
plt.ylabel('Age (years)')
plt.title('Age VS Product', fontsize = 16)

plt.subplot(2,2,3)
sns.boxplot(data, x="Product", y="Miles")
plt.xlabel('Treadmill Models')
plt.ylabel('Avg Miles / Week')
plt.title('Miles VS Product', fontsize = 16)

plt.subplot(2,2,4)
sns.boxplot(data, x="Product", y="Income")
plt.xlabel('Treadmill Models')
plt.ylabel('Income (Annual income in $)')
plt.title('Income VS Product', fontsize = 16)



plt.tight_layout(pad=2.0)
plt.show()

"""No need to clip the data as we are not making or training any model so we will work on the whole data.

## Non-Graphical Analysis
"""

p_count=data['Product'].value_counts()
p_count

vals = data['Product'].value_counts()
labels = vals.index
plt.title('Distribution of Treadmills Models', fontsize = 22)
plt.pie(vals, labels=labels, explode = [0.02,0.02,0.02], autopct='%1.0f%%',
        startangle=90, counterclock=False, colors=['lightgreen', 'skyblue', 'red'])

"""From this we know that the selling order of the products is KP281 > KP481 > KP781"""

data['Gender'].value_counts()

data_p = data['Gender'].value_counts()
labels = data_p.index
plt.title('Distribution of Gender', fontsize = 20)
plt.pie(data_p, labels=labels, explode = [0.01,0.01], autopct='%1.0f%%',
        startangle=90, counterclock=False, colors=['skyblue', 'pink'])

"""Male customers have 58% share in data while Female Customers have only 42% share.

"""

data['MaritalStatus'].value_counts()

data_p = data['MaritalStatus'].value_counts()
labels = data_p.index
plt.title('Distribution of Marital Status', fontsize = 20)
plt.pie(data_p, labels=labels, explode = [0.01,0.01], autopct='%1.0f%%',
        startangle=90, counterclock=False, colors=['red', 'green'])

"""59% Customers are married while 41% customers are single.

## Graphical Analysis
"""

plt.figure(figsize=(10,15))
plt.suptitle('Univariate Analysis', fontsize=20)

# Treadmill Model Counts
plt.subplot(4,3,1)
sns.countplot(data, x= 'Product')

# Age Count
plt.subplot(4,3,2)
sns.histplot(data, x= 'Age')

# Gender Count
plt.subplot(4,3,3)
sns.countplot(data, x= 'Gender')

# Education Count
plt.subplot(4,3,4)
sns.countplot(data, x= 'Education')

# Marital Status Count
plt.subplot(4,3,5)
sns.countplot(data, x= 'MaritalStatus')

# Usage Count
plt.subplot(4,3,6)
sns.countplot(data, x= 'Usage')

# Fitness Count
plt.subplot(4,3,7)
sns.countplot(data, x= 'Fitness')

# Income Count
plt.subplot(4,3,8)
sns.histplot(data, x= 'Income')

# Miles Count
plt.subplot(4,3,9)
sns.histplot(data, x= 'Miles')


plt.tight_layout(pad=2.0)

"""Some Observations

- Maximum Number of customers are in Age group of 20 to 30 Years.
- The Company has more number of Male customers than Female customers.
- Maximum Customers have 14-16 Years of Education.
- Maximum Number of customers Lies between \$45k to $60k Income Group
"""



"""Not much insights could be gathered from this data, we can try to do it product by product now

We see a general decline in females buying higher end product.
"""

plt.figure(figsize=(10,15))
plt.suptitle('Some analysis', fontsize = 24)

plt.subplot(3,2,1)
sns.lineplot(data, x='Usage', y='Fitness')
plt.xlabel('Usage')
plt.ylabel('Fitness')
plt.title('Education v/s Usage')

plt.subplot(3,2,2)
sns.barplot(data, x='MaritalStatus', y='Usage')
plt.xlabel('Martial Status')
plt.ylabel('Usage')
plt.title('MartialStatus v/s Usage')

plt.subplot(3,2,3)
sns.barplot(data, x='Income', y='Usage')
plt.xlabel('Income')
plt.ylabel('Usage')
plt.title('Income v/s Usage')

custom_palette = ['skyblue', 'lightgreen']

plt.subplot(3, 2, 4)
sns.countplot(data, x='Product', hue='Gender', palette=custom_palette)
plt.title('Product Purchased VS Gender', fontsize= 18, color= 'blue')
plt.ylabel('No. of Treadmills Purchased', fontsize= 15, color= 'skyblue')
plt.xlabel('Treadmills Purchased', fontsize= 15, color= 'skyblue')

plt.subplot(3, 2, 5)
sns.barplot(data, x='Gender', y='Usage')
plt.xlabel('Gender')
plt.ylabel('Usage')


plt.tight_layout(pad=2.0)
plt.show()

"""- We observe an almost linear relation between education and usage.
- There is almost no relation between martial status and usage
- We couldn't get better insights from income to usage
"""

fig,ax=plt.subplots(3,2,figsize=(10,11))
fig.subplots_adjust(wspace=.5,hspace=.5)
fig.suptitle('Bivariate Analysis',y=.95,fontsize=16,color='green')

sns.countplot(data,x='Product',hue='Gender',ax=ax[0,0])
sns.countplot(data,x='Product',hue='MaritalStatus',ax=ax[0,1])
sns.countplot(data,x='Usage',hue='Product',ax=ax[1,0])
sns.countplot(data,x='Fitness',hue='Product',ax=ax[1,1])
sns.countplot(data,x='Education',hue='Product',ax=ax[2,0])
sns.countplot(data,x='Fitness',hue='Gender',ax=ax[2,1])


ax[0,0].set_title('Product vs Gender')
ax[0,1].set_title('Product vs MaritalStatus')
ax[1,0].set_title('Usage vs Product')
ax[1,1].set_title('Fitness vs Product')
ax[2,0].set_title('Education vs Product')
ax[2,1].set_title('Fitness vs Gender')

plt.show()

"""Some observations
- People with 16 years of education prefer to buy KP281
- People whose usage is more than 3 days a week prefer machine KP781
- People with more than 16 years of education prefer to use KP781

# Probability
"""

p_count=data['Product'].value_counts(normalize=True)
p_count

"""- Probability that people will buy KP281 is 44%
- Probability that people will buy KP481 is 33%
- Probability that people will buy KP781 is 22%
"""

filtered_data = data[['Product','Gender']]
pd.crosstab(filtered_data['Product'], filtered_data['Gender'], margins=True)

"""- the P( Male buying KP781) => 33/104 => 31.7%
- the P( Male buying KP481) => 31/104 => 29.8%
- the P( Male buying KP281) => 40/104 => 38.4%
"""

print("Probability (Product | Partnered)")
print(data[data["MaritalStatus"] == "Partnered"]["Product"].value_counts(normalize=True))

print("\nProbability (Product | Single)")
data[data["MaritalStatus"] == "Single"]["Product"].value_counts(normalize=True)

"""Above data shows that

Single users have higher probability of buying KP781 than Partnered users
Partnered users have higher probability of buying KP481.

"""

print("Probability (MaritalStatus | KP281)")
print(data[data["Product"] == "KP281"]["MaritalStatus"].value_counts(normalize=True))

print("\nProbability (MaritalStatus | KP481)")
print(data[data["Product"] == "KP481"]["MaritalStatus"].value_counts(normalize=True))

print("\nProbability (MaritalStatus | KP781)")
print(data[data["Product"] == "KP781"]["MaritalStatus"].value_counts(normalize=True))

print("\nProbability (Product | Single & Male)")
data[(data["MaritalStatus"] == "Single") & (data["Gender"]=="Male")]["Product"].value_counts(normalize=True)

print(" \nProbability (Product | Single & Female)")
data[(data["MaritalStatus"] == "Single") & (data["Gender"]=="Female")]["Product"].value_counts(normalize=True)

print("\nProbability (Product | Partnered & Male)")
data[(data["MaritalStatus"] == "Partnered") & (data["Gender"]=="Male")]["Product"].value_counts(normalize=True)

print("\nProbability (Product | Partnered & Female)")
data[(data["MaritalStatus"] == "Partnered") & (data["Gender"]=="Female")]["Product"].value_counts(normalize=True)

"""## Correlation among different factors"""

continuous_columns = ["Age", "Education", "Usage", "Fitness", "Income", "Miles"]
sns.heatmap(data=data[continuous_columns].corr(), annot=True, vmin=-1, vmax=1)
plt.title("Heatmap of the Correlation of the dataset")
plt.show()

"""# Observations

- Most sold Treadmill model is 'KP281' while the least sold Treadmill is 'KP781'
- Maximum Number of customers are in Age group of 20 to 30 Years.
- The Company has more number of Male customers than Female customers.
- Maximum Customers have 14-16 Years of Education.
- Maximum Number of customers Lies between \$45k to $60k Income Group
- The company has more number of Partnered customers than Single Customers.
- Maximum Number of Customers use the Treadmill for 3 days a week.
- Most of the customers gave them a self rated Fitness score of 3 while only some customers gave them 1.
- Maximum number of customers runs 94 miles per week on an average on Treadmills.

# Recomendations

### For **'KP281'**
- Both Male and Female customers are equally likely to buy the model.
- Company should target more customers with Usage of 3 days/week for 'KP281'.
- Company should target more Partnered customers than Single customers for 'KP281'.
- Company should target more customers with 16 years of education for 'KP281'.

### For **'KP481'**
- Both Male and Female customers are almost equally likely to buy 'KP481'. so, company should target both of them.
- Company should target more customers with 14-16 years of education for 'KP481'
- Company should target more Partnered customers than Single customers for 'KP481'.
- Company should target more customers with Usage of 3 days/week for 'KP481'.

### For **'KP781'**
- Male customers are more likely to buy this product.
- Company should target more customers with 18 years of education for 'KP781'.
- Company should target more customers with Usage of 4 days/week for 'KP781'.
- Company should target more Partnered customers than Single customers for 'KP781'.
"""


